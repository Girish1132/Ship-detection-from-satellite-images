# Set basepath
basepath = "/Users/girish/Downloads/shipsnet/"
# Generate a list of files for ship and no_ship files
files_list_no_ship = glob(os.path.join(basepath, "0_*"))
files_list_ship = glob(os.path.join(basepath, "1_*"))

# Open the files
images = []
labels = []
text_labels = ['No ship', 'Ship']

for file in files_list_no_ship:
#     print(file)
    img_path = os.path.join(basepath, file) 
    img = cv2.imread(img_path)
    img = cv2.cvtColor(img,cv2.COLOR_BGR2RGB)
    images.append(img)
    labels.append(0)
    
for file in files_list_ship:
#     print(file)
    img_path = os.path.join(basepath, file) 
    img = cv2.imread(img_path)
    img = cv2.cvtColor(img,cv2.COLOR_BGR2RGB)
    images.append(img)
    labels.append(1)
    
images = np.array(images, dtype=np.int64)
labels = np.array(labels, dtype=np.int64)

# Split the data into train (70%), validation (20%) and test (10%) datasets
np.random.seed(27)
np.random.shuffle(images)

np.random.seed(27)
np.random.shuffle(labels)

train = int(0.7*len(images))
validation = int(0.2*len(images))
test = int(0.1*len(images))

X_train, y_train = images[:train], labels[:train]
print(len(X_train))
X_validation, y_validation = images[train:(validation+train)], labels[train:(validation+train)]
X_test, y_test = images[(validation+train):], labels[(validation+train):]

n_classes = 2

# Change the labels from categorical to one-hot encoding, i.e., class '1' transforms into vector [0, 1]
y_train = to_categorical(y_train, n_classes)
y_validation = to_categorical(y_validation, n_classes)
y_test = to_categorical(y_test, n_classes)

# Plot some sample images
n_rows = 3
n_cols = 5

plt.figure(figsize=(15, 10))
for i in range(n_rows*n_cols):
    ax = plt.subplot(n_rows, n_cols, i + 1)
    ax.set_yticklabels([])
    ax.set_xticklabels([])
    index = random.randint(0, len(X_train) - 1)
    plt.imshow(X_train[index])
    plt.title(text_labels[np.argmax(y_train[index])])
